"use strict";(self.webpackChunkwebsite_with_docusaurus=self.webpackChunkwebsite_with_docusaurus||[]).push([[3092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),k=o(n),u=r,c=k["".concat(s,".").concat(u)]||k[u]||d[u]||p;return n?a.createElement(c,l(l({ref:t},m),{},{components:n})):a.createElement(c,l({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,l=new Array(p);l[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var o=2;o<p;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1056:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>p,metadata:()=>i,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const p={},l="pytest",i={unversionedId:"ch08/ch08-02-pytest",id:"ch08/ch08-02-pytest",title:"pytest",description:"Python \u306b\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002",source:"@site/python/ch08/ch08-02-pytest.md",sourceDirName:"ch08",slug:"/ch08/ch08-02-pytest",permalink:"/python/ch08/ch08-02-pytest",draft:!1,tags:[],version:"current",lastUpdatedBy:"kevin-hans",lastUpdatedAt:1669131615,formattedLastUpdatedAt:"2022\u5e7411\u670822\u65e5",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"doctest",permalink:"/python/ch08/ch08-01-doctest"}},s={},o=[{value:"\u6e96\u5099",id:"\u6e96\u5099",level:2},{value:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",level:2},{value:"\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9",id:"\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9",level:2},{value:"\u30c6\u30b9\u30c8\u5b9f\u884c",id:"\u30c6\u30b9\u30c8\u5b9f\u884c",level:2},{value:"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8",id:"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8",level:2},{value:"\u6ce8\u610f\u70b9",id:"\u6ce8\u610f\u70b9",level:3},{value:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3",id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3",level:2},{value:"\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u30c6\u30b9\u30c8",id:"\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u30c6\u30b9\u30c8",level:3},{value:"\u524d\u51e6\u7406\u306e\u66f8\u304d\u65b9",id:"\u524d\u51e6\u7406\u306e\u66f8\u304d\u65b9",level:3},{value:"\u5f8c\u51e6\u7406\u306e\u66f8\u304d\u65b9",id:"\u5f8c\u51e6\u7406\u306e\u66f8\u304d\u65b9",level:3},{value:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u9023\u643a",id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u9023\u643a",level:3},{value:"\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u4f5c\u6210",id:"\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u4f5c\u6210",level:3},{value:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u30b9\u30b3\u30fc\u30d7",id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u30b9\u30b3\u30fc\u30d7",level:3},{value:"conftest.py",id:"conftestpy",level:3},{value:"\u6a19\u6e96\u51fa\u529b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3",id:"\u6a19\u6e96\u51fa\u529b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3",level:2},{value:"\u30e2\u30c3\u30af",id:"\u30e2\u30c3\u30af",level:2},{value:"\u30e2\u30c3\u30af\u306e\u4f7f\u3044\u65b9",id:"\u30e2\u30c3\u30af\u306e\u4f7f\u3044\u65b9",level:3},{value:"\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306e\u78ba\u8a8d",id:"\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306e\u78ba\u8a8d",level:3},{value:"\u623b\u308a\u5024\u306e\u5b9a\u7fa9",id:"\u623b\u308a\u5024\u306e\u5b9a\u7fa9",level:3},{value:"\u30b9\u30d1\u30a4",id:"\u30b9\u30d1\u30a4",level:3}],m={toc:o};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pytest"},"pytest"),(0,r.kt)("p",null,"Python \u306b\u306f\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"unittest"),(0,r.kt)("td",{parentName:"tr",align:null},"\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nose"),(0,r.kt)("td",{parentName:"tr",align:null},"\u304b\u3064\u3066\u306f\u4e3b\u6d41\u3060\u3063\u305f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pytest"),(0,r.kt)("td",{parentName:"tr",align:null},"\u73fe\u5728\u4e3b\u6d41\u306e\u3082\u306e")))),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u901a\u308a Python \u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u88fd\u306e pytest \u306e\u4f7f\u3044\u52dd\u624b\u304c\u826f\u3044\u305f\u3081\u3001pytest \u3092\u4f7f\u3063\u3066\u66f8\u304b\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u305d\u3053\u3067\u3053\u3053\u3067\u306f pytest \u306e\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u6e96\u5099"},"\u6e96\u5099"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/python/ch04/ch04-07-project-structures"},"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210")," \u3092\u53c2\u8003\u306b\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"tests")," \u914d\u4e0b\u306b\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c 1 \u3064\u3067\u5341\u5206\u306a\u5834\u5408\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3089\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002"),(0,r.kt)("p",null,"\u4e0b\u8a18\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u7d20\u6570\u5224\u5b9a\u306e\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"prime\n\u251c\u2500\u2500 prime.py\n\u2514\u2500\u2500 test_prime.py\n")),(0,r.kt)("p",null,'!!! warning "\u6ce8\u610f"\n\u30c6\u30b9\u30c8\u3092\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u5272\u3057\u3066\u66f8\u304f\u5834\u5408\u306f ',(0,r.kt)("inlineCode",{parentName:"p"},"tests")," \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u4e2d\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"__init__.py")," \u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"__init__.py")," \u304c\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u8a73\u3057\u304f\u306f ",(0,r.kt)("a",{parentName:"p",href:"/python/ch04/ch04-07-project-structures"},"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210")," \u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h2",{id:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"),(0,r.kt)("p",null,"pipenv \u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ mkdir fibonacci\n$ cd fibonacci\n$ pipenv install -d pytest\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-d")," \u3068\u3044\u3046\u306e\u306f\u958b\u767a\u6642\u306b\u3060\u3051\u5fc5\u8981\u3068\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3059\u308b\u30d5\u30e9\u30b0\u3067\u3059\u3002\u5358\u4f53\u30c6\u30b9\u30c8\u306f\u901a\u5e38\u958b\u767a\u6642\u306b\u3057\u304b\u5fc5\u8981\u306a\u3044\u305f\u3081\u5927\u62b5\u306e\u30b1\u30fc\u30b9\u3067 pytest \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"-d")," \u3092\u6307\u5b9a\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002"),(0,r.kt)("h2",{id:"\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9"},"\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9"),(0,r.kt)("p",null,"\u307e\u305a\u7d20\u6570\u5224\u5b9a\u3092\u884c\u3046\u95a2\u6570\u3092\u66f8\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"prime.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def is_prime(n: int) -> bool:\n    if n <= 1:\n        return False\n\n    if n == 2:\n        return True\n\n    if n % 2 == 0:\n        return False\n\n    i = 3\n\n    while i * i <= n:\n        if n % i == 0:\n            return False\n\n        i += 2\n\n    return True\n")),(0,r.kt)("p",null,"\u4eca\u56de\u306f\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u76f4\u63a5\u5b9f\u884c\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u30b7\u30d0\u30f3\u3084 ",(0,r.kt)("inlineCode",{parentName:"p"},"main()")," \u306f\u4e0d\u8981\u3067\u3059\u3002\u6b21\u306b\u3053\u306e\u95a2\u6570\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"test_prime.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from prime import is_prime\n\n\ndef test_is_prime():\n    assert not is_prime(1)\n    assert is_prime(2)\n    assert is_prime(3)\n    assert not is_prime(4)\n    assert is_prime(5)\n    assert not is_prime(6)\n    assert is_prime(7)\n    assert not is_prime(8)\n    assert not is_prime(9)\n    assert not is_prime(10)\n")),(0,r.kt)("p",null,"pytest \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"test_")," \u3067\u59cb\u307e\u308b\u30d5\u30a1\u30a4\u30eb\u30fb\u95a2\u6570\u3092\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u30b3\u30fc\u30c9\u3068\u307f\u306a\u3057\u307e\u3059\u3002\u30c6\u30b9\u30c8\u3057\u305f\u3044\u95a2\u6570\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"import")," \u6587\u3067\u53d6\u308a\u8fbc\u307f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"assert")," \u3068\u3044\u3046\u6587\u306e\u5f8c\u308d\u306b\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5f0f\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u30c6\u30b9\u30c8\u5b9f\u884c"},"\u30c6\u30b9\u30c8\u5b9f\u884c"),(0,r.kt)("p",null,"\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"pytest")," \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ pipenv shell\n(prime) $ pytest test_prime.py\n============================================== test session starts ==============================================\nplatform darwin -- Python 3.7.3, pytest-4.5.0, py-1.8.0, pluggy-0.11.0\nrootdir: /Users/kenichiro-ida/Documents/github.com/rinatz/prime\ncollected 1 item\n\ntest_prime.py .                                                                                           [100%]\n\n=========================================== 1 passed in 0.02 seconds ============================================\n")),(0,r.kt)("p",null,"\u7d20\u6570\u5224\u5b9a\u304c\u6b63\u3057\u304f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u306e\u6319\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"is_prime()")," \u304b\u3089\u6b21\u306e\u884c\u3092\u7121\u52b9\u306b\u3057\u3066\u518d\u5ea6\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"prime.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'hl_lines="8 9"',hl_lines:'"8','9"':!0},"def is_prime(n: int) -> bool:\n    if n <= 1:\n        return False\n\n    if n == 2:\n        return True\n\n    # if n % 2 == 0:\n    #     return False\n\n    i = 3\n\n    while i * i <= n:\n        if n % i == 0:\n            return False\n\n        i += 2\n\n    return True\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"(prime) $ pytest test_prime.py\n============================================== test session starts ==============================================\nplatform darwin -- Python 3.7.3, pytest-4.5.0, py-1.8.0, pluggy-0.11.0\nrootdir: /Users/kenichiro-ida/Documents/github.com/rinatz/prime\ncollected 1 item\n\ntest_prime.py F                                                                                           [100%]\n\n=================================================== FAILURES ====================================================\n_________________________________________________ test_is_prime _________________________________________________\n\n    def test_is_prime():\n        assert not is_prime(0)\n        assert not is_prime(1)\n        assert is_prime(2)\n        assert is_prime(3)\n>       assert not is_prime(4)\nE       assert not True\nE        +  where True = is_prime(4)\n\ntest_prime.py:9: AssertionError\n=========================================== 1 failed in 0.09 seconds ============================================\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"is_prime(4)")," \u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," \u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8"},"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8"),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u4f8b\u3067\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"is_prime(4)")," \u306e\u30c6\u30b9\u30c8\u306b\u5931\u6557\u3059\u308b\u3068\u3001\u305d\u306e\u6642\u70b9\u3067\u30c6\u30b9\u30c8\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"is_prime(5)")," \u4ee5\u964d\u306e\u30c6\u30b9\u30c8\u304c\u3069\u3046\u306a\u308b\u304b\u306f\u5206\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3053\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f ",(0,r.kt)("strong",{parentName:"p"},"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8")," \u3092\u4f5c\u308b\u3053\u3068\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"1\uff5e10")," \u307e\u3067\u306e\u3059\u3079\u3066\u306e\u5024\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8\u306f\u30c6\u30b9\u30c8\u5185\u3067\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u95a2\u6570\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u305b\u308b\u3088\u3046\u306b\u66f8\u304d\u76f4\u3057\u305f\u30c6\u30b9\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8\u3067\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3057\u305f\u5834\u5408\u306f\u3001\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u30c6\u30b9\u30c8\u304c\u7d9a\u884c\u3055\u308c\u307e\u3059\u3002\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"test_is_prime()")," \u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u30c6\u30b9\u30c8\u3067\u66f8\u304d\u76f4\u3059\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pytest\n\nfrom prime import is_prime\n\n\n@pytest.mark.parametrize(('number', 'expected'), [\n    (1, False),\n    (2, True),\n    (3, True),\n    (4, False),\n    (5, True),\n    (6, False),\n    (7, True),\n    (8, False),\n    (9, False),\n    (10, False),\n])\ndef test_is_prime(number, expected):\n    assert is_prime(number) == expected\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@pytest.mark.parametrize()")," \u306f\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3001\u3053\u308c\u306b\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u6700\u521d\u306e\u5f15\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"('number', 'expected')")," \u306f\u30c6\u30b9\u30c8\u95a2\u6570\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5f15\u6570\u540d\u306b\u306a\u308a\u307e\u3059\u3002\u7b2c 2 \u5f15\u6570\u306f\u5b9f\u969b\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u3092\u30bf\u30d7\u30eb\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@pytest.mark.parametrize(('number', 'expected'), [\n    (1, False),\n])\n")),(0,r.kt)("p",null,"\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308b\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"test_is_prime(1, False)")," \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u8907\u6570\u8a18\u8ff0\u3059\u308c\u3070\u305d\u306e\u5206\u3060\u3051 ",(0,r.kt)("inlineCode",{parentName:"p"},"number, expected")," \u306b\u5024\u304c\u6e21\u3055\u308c ",(0,r.kt)("inlineCode",{parentName:"p"},"test_is_prime()")," \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u6ce8\u610f\u70b9"},"\u6ce8\u610f\u70b9"),(0,r.kt)("p",null,"\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u66f8\u304d\u65b9\u306b\u306f\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\u6b21\u306e\u3044\u305a\u308c\u3082\u6b63\u3057\u3044\u66f8\u304d\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u30b9\u30da\u30eb\u30df\u30b9")),(0,r.kt)("p",null,'!!! warning "\u8aa4"\n',(0,r.kt)("inlineCode",{parentName:"p"},"@pytest.mark.parameterized")),(0,r.kt)("p",null,'!!! check "\u6b63"\n',(0,r.kt)("inlineCode",{parentName:"p"},"@pytest.mark.parametrized")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6587\u5b57\u5217\u3092\u30bf\u30d7\u30eb\u306b\u3057\u3066\u3044\u306a\u3044")),(0,r.kt)("p",null,'!!! warning "\u8aa4"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"```python\n@pytest.mark.parametrized('number', 'expected', [\n    ...\n])\n```\n")),(0,r.kt)("p",null,'!!! check "\u6b63"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"```python\n@pytest.mark.parametrized(('number', 'expected'), [\n    ...\n])\n```\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u30bf\u30d7\u30eb\u3092\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3068\u3057\u306a\u3044")),(0,r.kt)("p",null,'!!! warning "\u8aa4"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"```python\n@pytest.mark.parametrized(('number', 'expected'),\n    (1, False),\n    (2, True),\n    ...\n)\n```\n")),(0,r.kt)("p",null,'!!! check "\u6b63"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"```python\n@pytest.mark.parametrized(('number', 'expected'), [\n    (1, False),\n    (2, True),\n    ...\n])\n```\n")),(0,r.kt)("h2",{id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3"},"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3"),(0,r.kt)("p",null,"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306f\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u524d\u5f8c\u3067\u884c\u3044\u305f\u3044\u524d\u51e6\u7406\u30fb\u5f8c\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u95a2\u6570\u306e\u3053\u3068\u3067\u3059\u3002\u5404\u30c6\u30b9\u30c8\u3067\u540c\u3058\u524d\u51e6\u7406\u30fb\u5f8c\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u6697\u9ed9\u7684\u306b\u305d\u308c\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u30c6\u30b9\u30c8"},"\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u30c6\u30b9\u30c8"),(0,r.kt)("p",null,"\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u95a2\u6570\u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u6709\u52b9\u3067\u3059\u3002\u4eca\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6574\u6570\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3092\u6607\u9806\u306b\u8aad\u307f\u8fbc\u3080\u95a2\u6570\u3092\u8003\u3048\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List\n\n\n# List[int] \u3067\u8981\u7d20\u304c int \u306e\u30ea\u30b9\u30c8\u578b\u3092\u8868\u3059\u578b\u30d2\u30f3\u30c8\u306b\u306a\u308b\ndef load_numbers_sorted(txt: str) -> List[int]:\n    numbers = []\n\n    with open(txt) as f:\n        numbers = sorted(map(lambda e: int(e), f))\n\n    return numbers\n")),(0,r.kt)("p",null,"\u3053\u306e\u95a2\u6570\u306f\u5165\u529b\u5024\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u4e8b\u524d\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u305f\u3081\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,'!!! warning "\u6ce8\u610f"\n\u95a2\u6570\u304c\u30d5\u30a1\u30a4\u30eb\u3092\u5fc5\u8981\u3068\u3059\u308b\u304b\u3089\u3068\u8a00\u3063\u3066\u30c6\u30b9\u30c8\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u3042\u3089\u304b\u3058\u3081\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u30b3\u30df\u30c3\u30c8\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u306f\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u3068\u30c6\u30b9\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u5897\u3048\u308b\u305f\u3073\u306b\u30d5\u30a1\u30a4\u30eb\u3082\u5897\u3048\u3066\u3057\u307e\u3044\u3001\u7ba1\u7406\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002'),(0,r.kt)("h3",{id:"\u524d\u51e6\u7406\u306e\u66f8\u304d\u65b9"},"\u524d\u51e6\u7406\u306e\u66f8\u304d\u65b9"),(0,r.kt)("p",null,"\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6574\u6570\u3092\u4fdd\u5b58\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"load_numbers_sorted()")," \u306e\u305f\u3081\u306e\u30c6\u30b9\u30c8 ",(0,r.kt)("inlineCode",{parentName:"p"},"test_load_numbers_sorted()")," \u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"numbers.txt")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2\n5\n4\n3\n1\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test_load_numbers_sorted()")," \u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u6b21\u306e\u3088\u3046\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u4f7f\u3063\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pytest\n\n\n@pytest.fixture\ndef txt() -> str:\n    with open('numbers.txt', 'w') as f:\n        for n in [2, 5, 4, 3, 1]:\n            f.write('{}\\n'.format(n))\n\n    yield 'numbers.txt'\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"numbers.txt")," \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u4f7f\u3063\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"test_load_numbers_sorted()")," \u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_load_numbers_sorted(txt):\n    assert load_numbers_sorted(txt) == [1, 2, 3, 4, 5]\n")),(0,r.kt)("p",null,"\u30c6\u30b9\u30c8\u95a2\u6570\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3068\u540c\u3058\u540d\u524d\u306e\u5f15\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt")," \u3092\u6e21\u3057\u307e\u3059\u3002\u3059\u308b\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt")," \u306b\u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt()")," \u306e\u623b\u308a\u5024 ",(0,r.kt)("inlineCode",{parentName:"p"},"numbers.txt")," \u304c\u5165\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"txt()")," \u304c\u547c\u3070\u308c\u308b"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"numbers.txt")," \u304c\u4f5c\u6210\u3055\u308c\u308b"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"test_load_numbers_sorted('numbers.txt')")," \u304c\u547c\u3070\u308c\u308b")),(0,r.kt)("p",null,"\u3068\u3044\u3046\u632f\u308b\u821e\u3044\u3092\u3057\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u5f8c\u51e6\u7406\u306e\u66f8\u304d\u65b9"},"\u5f8c\u51e6\u7406\u306e\u66f8\u304d\u65b9"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"numbers.txt")," \u306f\u30c6\u30b9\u30c8\u304c\u7d42\u308f\u308c\u3070\u4e0d\u8981\u306a\u305f\u3081\u3001\u5f8c\u51e6\u7406\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt()")," \u306b\u6b21\u306e\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import os\n\n\n@pytest.fixture\ndef txt() -> str:\n    ...\n\n    yield 'numbers.txt'\n\n    os.remove('numbers.txt')\n")),(0,r.kt)("p",null,"\u3053\u3046\u3059\u308b\u3068\u30c6\u30b9\u30c8\u304c\u7d42\u308f\u308b\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"os.remove('numbers.txt')")," \u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@pytest.fixture\ndef txt():\n    # \u524d\u51e6\u7406\n\n    yield ...   # \u30c6\u30b9\u30c8\u95a2\u6570\u306b\u4f55\u3089\u304b\u306e\u5024\u3092\u6e21\u3059\n\n    # \u5f8c\u51e6\u7406\n")),(0,r.kt)("p",null,"\u3068\u3044\u3046\u69cb\u9020\u3092\u3057\u3066\u3044\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"test_load_numbers_sorted(txt)")," \u306e\u5f15\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt")," \u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt()")," \u3067\n\u4f55\u3092\u8fd4\u3057\u305f\u304b\u3067\u578b\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u9023\u643a"},"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u9023\u643a"),(0,r.kt)("p",null,"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304b\u3089\u5225\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@pytest.fixture\ndef txt_and_list(txt) -> Tuple[str, List[int]]:\n    yield txt, [1, 2, 3, 4, 5]\n\n\ndef test_load_numbers_sorted(txt_and_list):\n    assert load_numbers_sorted(txt_and_list[0]) == txt_and_list[1]\n")),(0,r.kt)("p",null,"\u3053\u306e\u5834\u5408 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt() -> txt_and_list()")," \u306e\u9806\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u7d50\u679c\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"test_load_numbers_sorted()")," \u306b\u6e21\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u4f5c\u6210"},"\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u4f5c\u6210"),(0,r.kt)("p",null,"pytest \u306b\u306f\u5b89\u5168\u306b\u30c6\u30f3\u30dd\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"tmpdir")," \u3068\u3044\u3046\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5148\u306b\u898b\u305f\u4f8b\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u304c\u30ed\u30fc\u30ab\u30eb\u306b\u4f5c\u3089\u308c\u308b\u305f\u3081\u3001\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u308b\u3068\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u6c5a\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"tmpdir")," \u3092\u4f7f\u3046\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp")," \u914d\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u3001\u30d5\u30a1\u30a4\u30eb\u7ba1\u7406\u304c\u30b9\u30de\u30fc\u30c8\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"tmpdir")," \u306e\u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@pytest.fixture\ndef txt(tmpdir) -> str:\n    tmpfile = tmpdir.join('numbers.txt')\n\n    with tmpfile.open('w') as f:\n        for n in [2, 5, 4, 3, 1]:\n            f.write('{}\\n'.format(n))\n\n    yield str(tmpfile)\n\n    tmpfile.remove()\n")),(0,r.kt)("h3",{id:"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u30b9\u30b3\u30fc\u30d7"},"\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u30b9\u30b3\u30fc\u30d7"),(0,r.kt)("p",null,"\u901a\u5e38\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306f\u30c6\u30b9\u30c8\u5358\u4f4d\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_sample1(txt):\n    ...\n\n\ndef test_sample2(txt):\n    ...\n")),(0,r.kt)("p",null,"\u3053\u306e\u5834\u5408\u3001\u30d5\u30a3\u30af\u30b9\u30c1\u30e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"txt()")," \u306f\u5404\u30c6\u30b9\u30c8\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u6bce\u56de\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3053\u308c\u304c\u975e\u52b9\u7387\u3067\u5197\u9577\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@pytest.fixture(scope='module')\ndef txt(tmpdir) -> str:\n    ...\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"scope")," \u306b\u6307\u5b9a\u3067\u304d\u308b\u5024\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"scope"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8aac\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"\u30c6\u30b9\u30c8\u95a2\u6570\u3054\u3068\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u5b9f\u884c\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"module"),(0,r.kt)("td",{parentName:"tr",align:null},"\u540c\u4e00\u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\uff09\u5185\u30671\u56de\u3060\u3051\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u5b9f\u884c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"class"),(0,r.kt)("td",{parentName:"tr",align:null},"\u540c\u4e00\u30af\u30e9\u30b9\u5185\u30671\u56de\u3060\u3051\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u5b9f\u884c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"session"),(0,r.kt)("td",{parentName:"tr",align:null},"\u30c6\u30b9\u30c8\u5b9f\u884c\u6642\u306b1\u56de\u3060\u3051\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u5b9f\u884c")))),(0,r.kt)("p",null,"\u305f\u3060\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u3080\u3084\u307f\u306b\u5e83\u3052\u306a\u3044\u307b\u3046\u304c\u826f\u3044\u3067\u3059\u3002\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u8a2d\u5b9a\u3092\u30c6\u30b9\u30c8\u9593\u3067\u5171\u6709\u3059\u308b\u3068\u4f9d\u5b58\u95a2\u4fc2\u304c\u751f\u307e\u308c\u3066\u3057\u307e\u3044\u3001\u4e0d\u610f\u306b\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u3066\u3057\u307e\u3046\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\u30c6\u30b9\u30c8\u95a2\u6570\u3054\u3068\u306b\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u5b9f\u884c\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u3088\u3046\u306b\u3059\u3079\u304d\u3067\u3059\u3002"),(0,r.kt)("h3",{id:"conftestpy"},"conftest.py"),(0,r.kt)("p",null,"\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u305f\u3044\u3067\u5171\u901a\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u305f\u3044\u3053\u3068\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u6642\u306f\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"conftest.py")," \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"conftest.py")," \u5185\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306f pytest \u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"conftest.py")," \u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u3067\u6697\u9ed9\u7684\u306b\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},".\n\u2514\u2500tests\n    \u251c\u2500conftest.py .............. \u5168\u30c6\u30b9\u30c8\u3067\u53c2\u7167\u53ef\u80fd\n    \u251c\u2500test_sample1\n    \u2502  \u251c\u2500conftest.py .......... test_sample2.py, test_sample3.py \u3067\u53c2\u7167\u53ef\u80fd\n    \u2502  \u251c\u2500test_sample2.py\n    \u2502  \u2514\u2500test_sample3.py\n    \u2514\u2500test_sample4\n        \u251c\u2500conftest.py .......... test_sample5.py, test_sample6.py \u3067\u53c2\u7167\u53ef\u80fd\n        \u251c\u2500test_sample5.py\n        \u2514\u2500test_sample6.py\n")),(0,r.kt)("h2",{id:"\u6a19\u6e96\u51fa\u529b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3"},"\u6a19\u6e96\u51fa\u529b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3"),(0,r.kt)("p",null,"\u6a19\u6e96\u51fa\u529b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u95a2\u6570\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u6642\u306b\u306f\u6a19\u6e96\u51fa\u529b\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u51fa\u529b\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3092\u51fa\u529b\u3059\u308b\u95a2\u6570\u3092\u8003\u3048\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def fibonacci(n: int):\n    a = 0\n    b = 1\n\n    for _ in range(n):\n        print(b)\n\n        a, b = b, a + b\n")),(0,r.kt)("p",null,"\u3053\u306e\u95a2\u6570\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"fibonacci(5)")," \u3068\u3057\u3066\u547c\u3073\u51fa\u3059\u3068\u6a19\u6e96\u51fa\u529b\u306b\u306f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1\n1\n2\n3\n5\n")),(0,r.kt)("p",null,"\u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u672c\u5f53\u306b\u3053\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u6642\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_fibonacci(capsys):\n    fibonacci(5)\n\n    out, _ = capsys.readouterr()\n\n    assert out == (\n        '1\\n'\n        '1\\n'\n        '2\\n'\n        '3\\n'\n        '5\\n'\n    )\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"capsys")," \u306f\u6a19\u6e96\u51fa\u529b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u305f\u3081\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"capsys.readouterr()\n")),(0,r.kt)("p",null,"\u306f\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u305f\u6a19\u6e96\u51fa\u529b\u3068\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306e\u6587\u5b57\u5217\u3092\u30bf\u30d7\u30eb\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u30e2\u30c3\u30af"},"\u30e2\u30c3\u30af"),(0,r.kt)("p",null,"\u30e2\u30c3\u30af\u3068\u306f\u95a2\u6570\u3084\u30af\u30e9\u30b9\u304c\u76f8\u4e92\u306b\u4f9d\u5b58\u3057\u3066\u52d5\u4f5c\u3059\u308b\u6642\u306b\u3001\u4f9d\u5b58\u3059\u308b\u95a2\u6570\u3084\u30af\u30e9\u30b9\u304c\u6b63\u3057\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306b\u4f7f\u308f\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"interaction.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def send(message: str):\n    receive(message)\n\n\ndef receive(message: str):\n    print('received: {}'.format(message))\n")),(0,r.kt)("p",null,"\u3044\u307e\u95a2\u6570 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u306f\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f\u6587\u5b57\u5217\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306b\u305d\u306e\u307e\u307e\u6e21\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c\u4ed5\u69d8\u3069\u304a\u308a\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u306f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"send()")," \u306f ",(0,r.kt)("inlineCode",{parentName:"li"},"receive()")," \u30921\u56de\u3060\u3051\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u304b\uff1f"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"send()")," \u304c\u53d7\u3051\u53d6\u3063\u305f\u6587\u5b57\u5217\u306f ",(0,r.kt)("inlineCode",{parentName:"li"},"receive()")," \u306b\u305d\u306e\u307e\u307e\u6e21\u3055\u308c\u3066\u3044\u308b\u304b\uff1f")),(0,r.kt)("p",null,"\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3053\u306e\u632f\u308b\u821e\u3044\u3092\u30c6\u30b9\u30c8\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308c\u3070"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def send(message: str):\n    receive('[1]: {}'.format(message))\n    receive('[2]: {}'.format(message))\n")),(0,r.kt)("p",null,"\u306e\u3088\u3046\u306b\u4ed5\u69d8\u306b\u6cbf\u3063\u3066\u3044\u306a\u3044\u5b9f\u88c5\u3092\u9593\u9055\u3063\u305f\u5b9f\u88c5\u3068\u3057\u3066\u691c\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30e2\u30c3\u30af\u3092\u4f7f\u3046\u3068\u3053\u306e\u3088\u3046\u306a\u78ba\u8a8d\u304c\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30e2\u30c3\u30af\u306e\u4f7f\u3044\u65b9"},"\u30e2\u30c3\u30af\u306e\u4f7f\u3044\u65b9"),(0,r.kt)("p",null,"\u30e2\u30c3\u30af\u3092\u4f7f\u3046\u306b\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pytest-dev/pytest-mock"},"pytest-mock")," \u3068\u3044\u3046 pytest \u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f pipenv \u3067\u6b21\u306e\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ pipenv install -d pytest-mock\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c\u6b63\u3057\u3044\u5f62\u5f0f\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u304c\u53d7\u3051\u53d6\u3063\u305f\u5f15\u6570\u3068\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u8a18\u61b6\u3059\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u507d\u306e\u5b9f\u88c5\u306b\u3059\u308a\u66ff\u3048\u3066\u3001\u5f15\u6570\u3084\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u4fdd\u5b58\u3067\u304d\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u3059\u306a\u308f\u3061\u30e2\u30c3\u30af\uff09\u306b\u3059\u308b\u3068\u3044\u3046\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u53d6\u308a\u307e\u3059\uff08\u3053\u308c\u3092\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u3068\u3044\u3044\u307e\u3059\uff09\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"pytest-mock")," \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"mocker")," \u3068\u3044\u3046\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"mocker")," \u3092\u4f7f\u3063\u3066\u6b21\u306e\u3088\u3046\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u30e2\u30c3\u30af\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_send(mocker):\n    receive = mocker.patch('studies.interaction.receive')\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mocker.patch()")," \u306f\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f\u6587\u5b57\u5217\u306e\u95a2\u6570\u3092\u30e2\u30c3\u30af\u5316\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"mocker.patch()")," \u3092\u547c\u3073\u51fa\u3057\u305f\u5f8c\u3067\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c\u547c\u3073\u51fa\u3059 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"interaction.py")," \u3067\u5b9a\u7fa9\u3055\u308c\u305f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306e\u4ee3\u308f\u308a\u306b\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f\u507d\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_send(mocker):\n    receive = mocker.patch('studies.interaction.receive')\n\n    send('Hello World!')\n")),(0,r.kt)("p",null,"\u3053\u3053\u3067\u547c\u3073\u51fa\u3057\u305f ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u306f\u5185\u90e8\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u547c\u3093\u3067\u3044\u307e\u3059\u304c\u305d\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"mocker.patch()")," \u304c\u4f5c\u6210\u3057\u305f\u30e2\u30c3\u30af\u5316\u3055\u308c\u305f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive")," \u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3053\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive")," \u306f\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f\u5024\u3084\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u8a18\u9332\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3055\u3089\u306b\u6b21\u306e\u3088\u3046\u306a\u884c\u3092\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"receive.assert_called_once_with('Hello World!')\n")),(0,r.kt)("p",null,"\u3053\u308c\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"'Hello World!'")," \u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066 1 \u56de\u3060\u3051\u547c\u3073\u51fa\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u30c6\u30b9\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5168\u4f53\u306f\u6b21\u306e\u3068\u304a\u308a\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_send(mocker):\n    receive = mocker.patch('studies.interaction.receive')\n\n    send('Hello World!')\n\n    receive.assert_called_once_with('Hello World!')\n")),(0,r.kt)("p",null,"\u8a66\u3057\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u306e\u5b9f\u88c5\u3092\u308f\u3056\u3068\u9593\u9055\u3048\u305f\u5b9f\u88c5\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"receive.assert_called_once_with()")," \u306e\u3068\u3053\u308d\u3067\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u306f\u305a\u3067\u3059\u3002"),(0,r.kt)("h3",{id:"\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306e\u78ba\u8a8d"},"\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306e\u78ba\u8a8d"),(0,r.kt)("p",null,"\u30e2\u30c3\u30af ",(0,r.kt)("inlineCode",{parentName:"p"},"receive")," \u306f\u81ea\u5206\u304c\u3069\u306e\u3088\u3046\u306a\u5f15\u6570\u3067\u4f55\u56de\u547c\u3070\u308c\u305f\u306e\u304b\u3092\u5c65\u6b74\u3068\u3057\u3066\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u547c\u3073\u51fa\u3057\u5c65\u6b74\u3092\u53c2\u7167\u3059\u308b\u306b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive.call_args_list")," \u3092\u53c2\u7167\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},">>> receive.call_args_list\n[call('Hello World!')]\n")),(0,r.kt)("p",null,"\u3053\u308c\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"'Hello World!'")," \u3092\u5f15\u6570\u3068\u3057\u30661\u56de\u3060\u3051\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u306e\u30ea\u30b9\u30c8\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u3066\u3082 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u6b63\u3057\u304f\u547c\u3093\u3060\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_send(mocker):\n    receive = mocker.patch('studies.interaction.receive')\n\n    send('Hello World!')\n\n    assert receive.call_args_list == [\n        mocker.call('Hello World!'),\n    ]\n")),(0,r.kt)("p",null,"\u4f8b\u3048\u3070 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u3068\u3059\u308b\u3068"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def send(message: str):\n    receive('[1]: {}'.format(message))\n    receive('[2]: {}'.format(message))\n")),(0,r.kt)("p",null,"\u547c\u3073\u51fa\u3057\u5c65\u6b74\u306e\u30c6\u30b9\u30c8\u306f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"assert receive.call_args_list == [\n    mocker.call('[1]: Hello World!'),\n    mocker.call('[2]: Hello World!'),\n]\n")),(0,r.kt)("p",null,"\u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u623b\u308a\u5024\u306e\u5b9a\u7fa9"},"\u623b\u308a\u5024\u306e\u5b9a\u7fa9"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u306e\u632f\u308b\u821e\u3044\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306e\u623b\u308a\u5024\u306b\u4f9d\u5b58\u3057\u3066\u5909\u308f\u308b\u30b1\u30fc\u30b9\u3092\u8003\u3048\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def send(message: str):\n    ok = receive(message)\n\n    if ok:\n        print('success')\n    else:\n        print('failure')\n\n\ndef receive(message: str) -> bool:\n    print('received: {}'.format(message))\n\n    return True\n")),(0,r.kt)("p",null,"\u3053\u306e\u5834\u5408 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306e\u623b\u308a\u5024\u306b\u5fdc\u3058\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u304c\u51fa\u529b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5909\u308f\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3067\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306f\u5e38\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," \u3057\u304b\u8fd4\u3055\u306a\u3044\u306e\u3067\u3001 ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," \u3092\u8fd4\u3057\u305f\u6642\u306e\n",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u306e\u632f\u308b\u821e\u3044\u304c\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3067\u3082\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306e\u623b\u308a\u5024\u3092\u4e0a\u624b\u304f\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_send(mocker, capsys):\n    receive = mocker.patch('studies.interaction.receive', return_value=False)\n\n    send('Hello World!')\n\n    receive.assert_called_once_with('Hello World!')\n\n    out, _ = capsys.readouterr()\n\n    assert out == 'failure\\n'\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mocker.patch()")," \u306e\u5f15\u6570\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"return_value=False")," \u3092\u6e21\u3059\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"send()")," \u5185\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"False")," \u3092\u8fd4\u3059\u3088\u3046\u306b\u507d\u88c5\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30b9\u30d1\u30a4"},"\u30b9\u30d1\u30a4"),(0,r.kt)("p",null,"\u30e2\u30c3\u30af\u3092\u4f7f\u3046\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306e\u5b9f\u88c5\u306f\u5b8c\u5168\u306b\u5225\u7269\u306b\u7f6e\u304d\u63db\u308f\u308a\u307e\u3059\u304c\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u672c\u7269\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u3092\u547c\u3073\u3064\u3064\u3001\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3053\u3068\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u30b9\u30d1\u30a4\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"studies/interaction.py")," \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import studies.interaction\n\nreceive = mocker.spy(studies.interaction, 'receive')\n")),(0,r.kt)("p",null,"\u3068\u3059\u308b\u3053\u3068\u3067\u30b9\u30d1\u30a4\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"mocker.spy()")," \u304c\u8fd4\u5374\u3059\u308b\u95a2\u6570\u306f\u672c\u7269\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"receive()")," \u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"assert_called_once_with()")," \u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u4f7f\u3044\u65b9\u306f\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002"))}d.isMDXComponent=!0}}]);